
services:
  broadcast_channel:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  # The OPAL server is the central component of the OPAL system:
  # Creates a Pub/Sub channel clients subscribe to
  # Tracks a git repository (via webhook / polling) for updates to policy and static data
  # Accepts data update notifications via Rest API
  # Serves default data source configuration for clients
  # Pushes policy and data updates to clients
  opal_server:
    image: permitio/opal-server:latest
    environment:
      - OPAL_BROADCAST_URI=postgres://postgres:postgres@broadcast_channel:5432/postgres
      - UVICORN_NUM_WORKERS=4
      - OPAL_POLICY_REPO_URL=https://github.com/permitio/opal-example-policy-repo
      - OPAL_POLICY_REPO_POLLING_INTERVAL=30
      - OPAL_DATA_CONFIG_SOURCES={"config":{"entries":[{"url":"http://opal_server:7002/policy-data","topics":["policy_data"],"dst_path":"/static"}]}}
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
    ports:
      - "7002:7002"
    depends_on:
      - broadcast_channel
  # Opal Client:
  # Prebuilt with an OPA agent inside the image
  # Keeps the OPA agent cache up to date with realtime updates pushed from the server
  # Can selectively subscribe to specific topics of policy code (rego) and policy data
  # Fetches data from multiple sources (e.g. DBs, APIs, 3rd party services)
  opal_client:
    image: permitio/opal-client:latest
    environment:
      - OPAL_SERVER_URL=http://opal_server:7002
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      - OPAL_INLINE_OPA_LOG_FORMAT=http
    ports:
      - "7766:7000"
      - "8181:8181"
    depends_on:
      - opal_server
    command: sh -c "./wait-for.sh opal_server:7002 --timeout=20 -- ./start.sh"